<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ldbz.mapper.LdbzItemMapper" >

  <resultMap id="BaseResultMap" type="cn.ldbz.pojo.LdbzItem" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sort_order" property="sortOrder" jdbcType="INTEGER" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="creator_name" property="creatorName" jdbcType="VARCHAR" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="updator" property="updator" jdbcType="VARCHAR" />
    <result column="updator_name" property="updatorName" jdbcType="VARCHAR" />
    
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="BIGINT" />
    <result column="sell_point" property="sellPoint" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="FLOAT" />
    <result column="old_price" property="oldPrice" jdbcType="FLOAT" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="barcode" property="barcode" jdbcType="VARCHAR" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="cid" property="cid" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="weight" property="weight" jdbcType="INTEGER" />
    <result column="colour" property="colour" jdbcType="VARCHAR" />
    <result column="size" property="size" jdbcType="VARCHAR" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="detail_image" property="detailImage" jdbcType="VARCHAR" />
    <result column="preview_image" property="previewImage" jdbcType="VARCHAR" />
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id , sort_order, created , creator , creator_name, updated , updator, updator_name , title , code , sell_point , 
    old_price , price , num , barcode , image , cid , status , weight , colour , size , detail , detail_image , preview_image
  </sql>
  
  <select id="selectByEntity" resultMap="BaseResultMap"  parameterType="cn.ldbz.pojo.LdbzItem">
    select
    <include refid="Base_Column_List" />
    from ldbz_item
    <where>
      <if test="entity.title != null and entity.title != '' " >
        and title like #{entity.title ,jdbcType=VARCHAR}
      </if>
      <if test="entity.code != null and entity.code != '' " >
        and code like #{entity.code ,jdbcType=VARCHAR}
      </if>
      <if test="entity.status != null " >
        and status = #{entity.status ,jdbcType=INTEGER}
      </if>
      <if test="entity.id != null and entity.id != '' " >
        and id = #{entity.id ,jdbcType=BIGINT}
      </if>
    </where>
    order by created desc , sort_order , updated desc
    limit #{start} , #{limit}
  </select>
  
  <select id="countByEntity" parameterType="cn.ldbz.pojo.LdbzItem" resultType="java.lang.Long" >
    select count(*) from ldbz_item
    <where>
      <if test="title != null and title != '' " >
        and title like #{title ,jdbcType=VARCHAR}
      </if>
      <if test="status != null " >
        and status = #{status ,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  
  <select id="selectByKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ldbz_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectByCode" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ldbz_item
    where code = #{code,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByKey" parameterType="java.lang.Long" >
    delete from ldbz_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <delete id="deleteByKeys" parameterType="java.util.List" >
    delete from ldbz_item
    where id in
    <foreach collection="list" item="id" open="(" close=")" separator="," >
      #{id}
    </foreach>
  </delete>
  
  <delete id="deleteByEntity" parameterType="cn.ldbz.pojo.LdbzItem" >
    delete from ldbz_item
  </delete>
  
  <insert id="insertByEntity" parameterType="cn.ldbz.pojo.LdbzItem" >
    insert into ldbz_item (
	    id , sort_order, created , creator , creator_name, code , title , sell_point , old_price , 
    	price , num , barcode , image , cid , status , weight , colour , size , detail , detail_image , preview_image
    )
    values (#{id,jdbcType=BIGINT},#{sortOrder,jdbcType=TIMESTAMP}, #{created,jdbcType=TIMESTAMP}, 
    	#{creator,jdbcType=VARCHAR} , #{creatorName,jdbcType=VARCHAR},#{code,jdbcType=BIGINT},
    	#{title,jdbcType=VARCHAR},#{sellPoint,jdbcType=VARCHAR},#{oldPrice,jdbcType=BIGINT},#{price,jdbcType=BIGINT},
        #{num,jdbcType=INTEGER},#{barcode,jdbcType=VARCHAR},#{image,jdbcType=VARCHAR},#{cid,jdbcType=BIGINT},
        #{status,jdbcType=INTEGER},#{weight,jdbcType=INTEGER}, #{colour,jdbcType=VARCHAR} , #{size,jdbcType=VARCHAR}, 
        #{detail,jdbcType=VARCHAR} , #{detailImage,jdbcType=VARCHAR} , #{previewImage,jdbcType=VARCHAR}
      )
  </insert>
  
  <insert id="insertBySelective" parameterType="cn.ldbz.pojo.LdbzItem" >
    insert into ldbz_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id
      </if>
      <if test="sortOrder != null" >
        ,sort_order
      </if>
      <if test="created != null" >
        ,created
      </if>
      <if test="creator != null" >
        ,creator
      </if>
      <if test="creatorName != null" >
        ,creator_name
      </if>
      <if test="status != null" >
        ,status
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT}
      </if>
      <if test="sortOrder != null" >
        ,#{sortOrder,jdbcType=INTEGER}
      </if>
      <if test="created != null" >
        ,#{created,jdbcType=TIMESTAMP}
      </if>
      <if test="creator != null" >
        ,#{creator,jdbcType=VARCHAR}
      </if>
      <if test="status != null" >
        ,#{status,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  
  <update id="updateBySelective" parameterType="cn.ldbz.pojo.LdbzItem" >
    update ldbz_item
    <set>
      <if test="sortOrder != null" >
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="updator != null" >
        updator = #{updator,jdbcType=VARCHAR},
      </if>
      <if test="updatorName != null" >
        updator_name = #{updatorName,jdbcType=VARCHAR},
      </if>
    </set>
  </update>
  
  <update id="updateByEntity" parameterType="cn.ldbz.pojo.LdbzItem" >
    update ldbz_item
    set id = #{id,jdbcType=BIGINT},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      updated = #{updated,jdbcType=TIMESTAMP},
      updator = #{updator,jdbcType=VARCHAR} ,
      updator_name = #{updatorName,jdbcType=VARCHAR} 
  </update>
  
  <update id="updateByKeySelective" parameterType="cn.ldbz.pojo.LdbzItem" >
    update ldbz_item
    <set >
      <if test="sortOrder != null" >
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="updator != null" >
        updator = #{updator,jdbcType=VARCHAR},
      </if>
      <if test="updatorName != null" >
        updator_name = #{updatorName,jdbcType=VARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByKey" parameterType="cn.ldbz.pojo.LdbzItem" >
    update ldbz_item
    set 
      sort_order = #{sortOrder,jdbcType=INTEGER},
      updated = #{updated,jdbcType=TIMESTAMP},
      updator = #{updator,jdbcType=VARCHAR},
      updator_name = #{updatorName,jdbcType=VARCHAR} ,
      title = #{title,jdbcType=VARCHAR} ,
      sell_point = #{sellPoint,jdbcType=VARCHAR} ,
      price = #{price,jdbcType=BIGINT} ,
      old_price = #{oldPrice,jdbcType=BIGINT} ,
      num = #{num,jdbcType=INTEGER},
      barcode = #{barcode,jdbcType=VARCHAR} ,
      image = #{image,jdbcType=VARCHAR} ,
      cid = #{cid,jdbcType=BIGINT} ,
      status = #{status,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      colour = #{colour,jdbcType=VARCHAR} ,
      size = #{size,jdbcType=VARCHAR} ,
      detail = #{detail,jdbcType=VARCHAR}, 
      detail_image = #{detailImage,jdbcType=VARCHAR} ,
      preview_image = #{previewImage,jdbcType=VARCHAR}
    where 
      id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectItemListBySheetKey" parameterType="string"  resultMap="BaseResultMap" >
    select	a.id , a.sort_order, a.title , a.code , a.sell_point , a.old_price , a.price , a.num , a.barcode , a.image , a.weight , a.colour , a.size , d.category_name
    from ldbz_item a join ldbz_item_sheet_assign b on a.id = b.item_id
    join ldbz_item_sheet c on c.id = b.sheet_id
    join ldbz_category d on a.cid = d.id
    where c.sheet_key = #{key}
    and a.status = 1
  </select>
  
  <select id="getItemImageByType" parameterType="string"  resultType="string" >
    select
	    <if test="type == 1" >
	    	a.preview_image
	    </if>
	    <if test="type == 2" >
	    	a.detail_image
	    </if>
    from ldbz_item a
    where a.code = #{code,jdbcType=BIGINT}
    and a.status = 1
  </select>
  
  <select id="getItemPriceByCode" parameterType="string"  resultType="float" >
    select a.price
    from ldbz_item a
    where a.code = #{code,jdbcType=BIGINT}
    and a.status = 1
  </select>
  
</mapper>